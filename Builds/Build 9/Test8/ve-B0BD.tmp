using System;
using System.Collections.Generic;
using System.Text;

using System.Net.Sockets;

namespace Test8
{
    class Program
    {
        static void Main(string[] args)
        {
            ClamD clam = new ClamD("127.0.0.1", 3310);
            clam.Scan("c:\\inst\\eicar.com");
        }
    }
    public class ClamD
    {
        public ClamD(string server, int port)
        {
            this._clamd = new TcpClient(server, port);
        }
        private TcpClient _clamd;
        public void Scan(string FileName)
        {
            byte[] writebuff;
            byte[] readbuff;
            int responselength;
            writebuff = Encoding.ASCII.GetBytes("nSCAN " + FileName + "\n");
            NetworkStream stream = this._clamd.GetStream();
            stream.Write(writebuff, 0, writebuff.Length);
            readbuff = new byte[8192];
            responselength = stream.Read(readbuff, 0, readbuff.Length);
            Console.WriteLine(Encoding.ASCII.GetString(readbuff,0,responselength));
        }
    }
}

/*
static void Connect(String server, String message) 
{
  try 
  {
    // Create a TcpClient.
    // Note, for this client to work you need to have a TcpServer 
    // connected to the same address as specified by the server, port
    // combination.
    Int32 port = 13000;
    TcpClient client = new TcpClient(server, port);

    // Translate the passed message into ASCII and store it as a Byte array.
    Byte[] data = System.Text.Encoding.ASCII.GetBytes(message);         

    // Get a client stream for reading and writing.
   //  Stream stream = client.GetStream();

    NetworkStream stream = client.GetStream();

    // Send the message to the connected TcpServer. 
    stream.Write(data, 0, data.Length);

    Console.WriteLine("Sent: {0}", message);         

    // Receive the TcpServer.response.

    // Buffer to store the response bytes.
    data = new Byte[256];

    // String to store the response ASCII representation.
    String responseData = String.Empty;

    // Read the first batch of the TcpServer response bytes.
    Int32 bytes = stream.Read(data, 0, data.Length);
    responseData = System.Text.Encoding.ASCII.GetString(data, 0, bytes);
    Console.WriteLine("Received: {0}", responseData);         

    // Close everything.
    stream.Close();         
    client.Close();         
  } 
  catch (ArgumentNullException e) 
  {
    Console.WriteLine("ArgumentNullException: {0}", e);
  } 
  catch (SocketException e) 
  {
    Console.WriteLine("SocketException: {0}", e);
  }

  Console.WriteLine("\n Press Enter to continue...");
  Console.Read();
}
*/